---
import Icon from '@xtreat/astro-iconify';
import Head from '../components/Head.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { siteTitle, siteDescription } from '../consts';
import ThemeWrapper from '../components/ThemeWrapper.astro';
import { getCollection } from 'astro:content';
// import FormattedDate from '../components/FormattedDate.astro';
import ThemeSwitcher from '../components/ThemeSwitcher.astro';

const articles = await getCollection('articles', ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true;
});

const sortedArticles = [...articles].sort((a, b) => {
  const dateA = a.data.updated ? a.data.updated.valueOf() : a.data.created.valueOf();
  const dateB = b.data.updated ? b.data.updated.valueOf() : b.data.created.valueOf();
  return dateB - dateA;
});
---

<ThemeWrapper>
  <Head title={siteTitle} description={siteDescription} />
  <body>
    <Header />
    <main>
      {
        sortedArticles.map((article) => (
          <a href={article.id}>
            <div class='flex flex-row p-2'>
              <div class='max-md:hidden flex flex-col items-center min-w-[148px] min-h-[148px] text-center rounded-lg aspect-square'>
                {/* Using [&>*]:fill-current to replace colors in icons */}
                <Icon icon={article.data.icon} class='text-primary mx-6 h-32 w-32 [&>*]:fill-current' />
                <span class='text-sm whitespace-nowrap text-gray-900'>
                  {/* <FormattedDate date={article.data.updated || article.data.created} /> */}
                </span>
              </div>

              <article>
                <h1 class='mb-0 text-primary'>{article.data.title}</h1>
                <p class='mt-1 text-base-content font-light tracking-normal'>{article.data.description}</p>
              </article>
            </div>
          </a>
        ))
      }
    </main>
    <ThemeSwitcher />
    <Footer />
  </body>
</ThemeWrapper>
